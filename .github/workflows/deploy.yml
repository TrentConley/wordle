name: Deploy to VM

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [master]

permissions:
  contents: read

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (for reference only)
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            APP_DIR=/opt/llm-wordle-arena
            REPO_SSH=git@github.com:${{ github.repository }}.git
            # Ensure docker & compose plugin are present
            if ! command -v docker >/dev/null 2>&1; then
              echo "Docker is required on the VM" >&2; exit 1
            fi
            docker compose version >/dev/null 2>&1 || { echo "Docker Compose plugin is required" >&2; exit 1; }

            # Prepare app directory
            sudo mkdir -p "$APP_DIR"
            sudo chown -R "$USER":"$USER" "$APP_DIR"
            cd "$APP_DIR"

            # Initialize repo if missing; use deploy key already configured on the VM for GitHub access
            if [ ! -d .git ]; then
              git init
              git remote add origin "$REPO_SSH"
              git fetch origin master --depth=1
              git checkout -B master origin/master
            else
              git fetch origin master --depth=1
              git reset --hard origin/master
            fi

            # Ensure env exists (managed on VM)
            if [ ! -f .env ]; then
              echo "PORT=8080" > .env
              echo "# TODO: add your API keys and config here" >> .env
            fi

            # Build and restart
            docker compose down --remove-orphans || true
            docker compose up -d --build

            # Basic health check
            sleep 3
            docker ps --filter name=llm-wordle-arena --format '{{.Names}} - {{.Status}}'
